wb = xlsx_package.workbook
s = wb.styles
header = s.add_style sz: 14, b: true, bg_color: "6EAA46", fg_color: "FFFFFF", alignment: { wrap_text: true, vertical: :center }
wb.add_worksheet(name: "Post") do |sheet|
  sheet.add_row ["Platform", "Group Name", "First Name", "Last Name", "Practitioner Type", "NPI", "State", "State License Number","State License Effective date", "State License Expiration", "Advance Practice Registered Nurse License License Number",
               "State", "Advance Practice Registered Nurse License Effective Date",
              "Advance Practice Registered Nurse License Expiration Date", "Registered Nurse License Number", "State", "Registered Nurse Effective Date", "Registered Nurse Expiration Date", "Certification Name", "Board Certification Number", "Effective Date", "Re-cretification Date"
              ], style: header, height: 70
  @providers.each do |provider|
    licenses = provider.licenses
    cnp_licenses = provider.cnp_licenses
    rn_licenses = provider.rn_licenses
    board_certifications = provider.board_certifications
    sheet.add_row [
      flatforms.detect{|flatform| flatform.last == provider.group&.flatform }&.first,
      provider.group&.group_name,
      provider.first_name,
      provider.last_name,
      provider.practitioner_type,
      provider.npi,
      state_names_p = State.where(id: licenses.pluck(:state_id).reject(&:blank?)).pluck(:name).join(', '),
      licenses.pluck(:license_number).reject {|i| !i.present? }.join(', '),
      licenses.pluck(:license_state_renewal_date).reject {|i| !i.present? }.collect { |i| Date.parse(i).strftime('%b %d, %Y') }.join(', '),
      licenses.pluck(:license_expiration_date).reject {|i| !i.present? }.collect { |i| i.strftime('%b %d, %Y') }.join(", "),
      cnp_licenses.pluck(:cnp_license_number).reject {|i| !i.present? }.join(', '),
      state_names = State.where(id: cnp_licenses.pluck(:state_id).reject(&:blank?)).pluck(:name).join(', '),
      cnp_licenses.pluck(:cnp_license_renewal_effective_date).reject {|i| !i.present? }.collect { |i| i.strftime('%b %d, %Y') }.join(', '),
      cnp_licenses.pluck(:expiration_date).reject {|i| !i.present? }.collect { |i| i.strftime('%b %d, %Y') }.join(", "),
      rn_licenses.pluck(:rn_license_number).reject {|i| !i.present? }.join(', '),
      state_names_rn = State.where(id: rn_licenses.pluck(:state_id).reject(&:blank?)).pluck(:name).join(', '),
      rn_licenses.pluck(:rn_license_renewal_effective_date).reject {|i| !i.present? }.collect { |i| Date.parse(i).strftime('%b %d, %Y') }.join(', '),
      rn_licenses.pluck(:rn_license_expiration_date).reject {|i| !i.present? }.collect { |i| i.strftime('%b %d, %Y') }.join(", "),
      board_certifications.pluck(:bc_board_name).reject {|i| !i.present? }.join(', '),
      board_certifications.pluck(:bc_certification_number).reject {|i| !i.present? }.join(', '),
      board_certifications.pluck(:bc_effective_date).reject {|i| !i.present? }.collect { |i| i.strftime('%b %d, %Y') }.join(', '),
      board_certifications.pluck(:bc_recertification_date).reject {|i| !i.present? }.collect { |i| i.strftime('%b %d, %Y') }.join(', '),
    ], types: [:string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string, :string]
  end
  sheet.column_widths 12, 18, 24, 24, 18, 16, 12, 16, 16, 16, 26, 12, 26, 26, 18, 12, 18, 18, 16, 16, 18, 18
end