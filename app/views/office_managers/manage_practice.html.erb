<%= render "top_button_navs"%>
<%= render 'user_restriction', locals: { access_key: 'Manage Practice' } do %>
  <div class="content p-3">
    <div class="container">
      <div class="row">
          <div class="col-xl-8 right-pane">
            <div class="d-flex gap-2">
              <%# <a class="bg-primary text-white p-2 fs-5">Location</a> %>
              <!-- <button class="btn btn-nav btn-sm btn-primary">Hospital Affiliation</button>
              <button class="btn btn-nav btn-sm btn-primary">Contracted Health Plans</button>
              <button class="btn btn-nav btn-sm btn-primary">Services</button> -->
            </div>
            <div class="filter-wpr">
              <div class="row mb-3">
                <div class="col-xl-5">
                  <form class="form_search_with_icon">
                    <% if params[:template].present? %>
                      <%= hidden_field_tag :template, params[:template] %>
                    <% end %>
                    <div class="search-wrp form-control d-flex justify-content-between">
                      <input type="text" name="search" placeholder="Search" class="search-input w-100" value="<%= params[:search] %>">
                      <i class='bx bx-search'></i>
                    </div>
                  </form>
                </div>
                <div class="col-xl-7 button-wpr">
                  <% if current_user.can_access?('Add Location') %>
                    <button class="btn btn-sm btn-primary add-practice-location-button">
                      <i class='bx bx-plus' ></i>
                      Add Location
                    </button>
                  <% end %>
                </div>
              </div>
            </div>
            <div class="table-responsive">
              <table class="table practice-table mt-4">
                <thead>
                  <tr>
                    <th class="text-white"  scope="col">Location</th>
                    <th class="text-white"  scope="col">Address</th>
                    <th class="text-white"  scope="col">City</th>
                    <th class="text-white"  scope="col">State/ZIP Code</th>
                    <th class="text-white"  scope="col">Phone</th>
                    <th class="text-white"  scope="col">Provider</th>
                    <th class="text-white"  scope="col">Edit</th>
                  </tr>
                </thead>
                <tbody id="practice-location">
                  <%= render @locations %>
                </tbody>
              </table>
            </div>
            <br>
            <% if @locations %>
              <div class="col-lg-12">
                <div class="d-flex justify-content-between bg-medium-grey rounded align-items-center py-3">
                  <div class="page_info ms-3 text-black">
                    <%= page_entries_info @locations %>
                  </div>
                  <% if params[:per_page ].present? %>
                    <%= will_paginate @locations, :params =>  {per_page: @per_page }, renderer: WillPaginate::ActionView::BootstrapLinkRenderer %>
                  <% else %>
                    <%= will_paginate @locations, renderer: WillPaginate::ActionView::BootstrapLinkRenderer %>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        <div class="col-xl-4">
          <div class="side-panel">
            <div class="side-panel-header">
              <h6>Organization Info</h6>
            </div>
            <div class="side-panel-content">
              <div class="form-row">
                <h6>Organization Name: <%= current_client_organization&.organization_name %></h6>
              </div>
              <div class="form-row">
                <p>Organization Type: <%= current_client_organization&.organization_type %></p>
              </div>
              <div class="form-row">
                <p>Organization NPI: <%= current_client_organization&.organization_npi %></p>
              </div>
              <div class="form-row">
                <p>Address 1: <%= current_client_organization&.organization_address_1 %></p>
              </div>
              <div class="form-row">
                <p>Address 2: <%= current_client_organization&.organization_address_2 %></p>
              </div>
              <div class="form-row">
                <p>City: <%= current_client_organization&.organization_city %></p>
              </div>
              <div class="form-row">
                <p>State: <%= State.where(id: current_client_organization&.organization_state_id).first&.name %></p>
              </div>
              <div class="form-row">
                <p>Zip Code: <%= current_client_organization&.organization_zipcode %></p>
              </div>
              <div class="form-row">
                <p>Phone Number: <%= current_client_organization&.organization_phone_number %></p>
              </div>
              <div class="form-row">
                  <p>Fax Number: <%= current_client_organization&.organization_fax_number %></p>
              </div>
              <div class="form-row">
                <p>Organization DBA Name: <%= current_client_organization&.organization_dba_name %></p>
              </div>
              <div class="form-row">
                <p>Organization Tax ID: <%= current_client_organization&.organization_tax_id %></p>
              </div>
              <div class="form-row mt-4">
                <% if current_user.can_access?('Edit Organization') %>
                  <button class="btn btn-manage btn-primary" data-bs-toggle="modal" data-bs-target="#editOrganizationModal">Edit Organization</button>
                <% end %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Edit Organization Modal -->
  <div class="modal fade" id="editOrganizationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <div class="modal-content">
        <div class="modal-body">
          <div class="content p-0">
            <h6 class="">Edit Organization</h6>
              <%= form_for current_client_organization, url: client_organizations_path do |f| %>

                <div class="fade show active">
                  <%= render partial: "client_organizations/form", locals: { f: f } %>
                </div>
                <div class="form-row row mt-3">
                  <%= f.submit "Save", class: 'btn btn-manage btn-primary skip-loader'%>
                </div>
              <% end %>

              <div class="form-row mt-3">
                <button type="button" class="btn btn-card-remove" data-bs-dismiss="modal">Cancel</button>
              </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Associate Provider Modal -->
  <div class="modal fade associateProviderModal" id="providerAssociationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-body">
          <div class="content">
            <div class="modal-title">
              <h6 class="">Associate Providers</h6>
              <!-- <button class="btn btn-cancel" data-bs-dismiss="modal">Cancel</button> -->
            </div>
            <div class="row">
              <p class="associate-note mt-4">Instruction: Drag the name of the provider you want to associate or disassociate.</p>
            </div>

            <form id="associateProvidersForm" method="POST" action="<%= update_provider_associations_path %>">
              <input type="hidden" name="practice_location_id" id="practice_location_id" value="<%= params[:practice_location_id] %>">
              <input type="hidden" name="associated_providers" id="associated_providers">
              <input type="hidden" name="disassociated_providers" id="disassociated_providers">

              <div class="row">
                <!-- Left Panel -->
                <div class="col-xl-6">
                  <h6 class="associate-heading mt-4 text-primary">
                    Providers added to the Organization, who have accepted your invitation, but not yet associated with the selected location.
                  </h6>
                  <div class="associate-pane associate-left-pane d-block">
                    <% if @non_associated_providers.present? %>
                      <% @non_associated_providers.each do |provider| %>
                        <% next unless provider.full_name.present? || provider.email_address.present? %>
                        <div class="provider-item mt-3" data-provider-id="<%= provider.id %>" draggable="true" style="width: fit-content;">
                          <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="<%= provider.id %>" id="check-<%= provider.id %>">
                            <label class="form-check-label" for="check-<%= provider.id %>"><%= provider.full_name %></label>
                          </div>
                        </div>
                        <br>
                      <% end %>
                    <% else %>
                      <p class="text-muted">No providers available.</p>
                    <% end %>
                  </div>
                </div>

                <!-- Right Panel -->
                <div class="col-xl-6">
                  <h6 class="associate-heading mt-4 text-success">
                    Providers associated to location who have accepted your invitation.
                  </h6>
                  <div class="associate-pane associate-right-pane">
                    <% if @providers.present? %>
                      <% @providers.each do |provider| %>
                        <% next unless provider.full_name.present? || provider.email_address.present? %>
                        <div class="provider-item mt-3" data-provider-id="<%= provider.id %>" draggable="true" style="width: fit-content;">
                          <%= provider.full_name %>
                        </div>
                        <br>
                      <% end %>
                    <% else %>
                      <p class="text-muted">No providers available.</p>
                    <% end %>
                  </div>
                </div>
              </div>

              <div class="add-note mt-4">
                <h6>Note:</h6>
                <h6>Please note that this window only shows Providers who have accepted your invitation. Providers who have not yet accepted your invitation cannot be associated or disassociated. </h6>
              </div>
              <div class="form-row mt-3">
                <button type="button" id="saveProviderAssociations" class="btn btn-manage btn-primary">Save</button>
                <button type="button" class="btn btn-card-remove" data-bs-dismiss="modal">Cancel</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Associate Provider Modal -->
  <div id="practice_location_modal_container">
  </div>
  <script>
    $(document).ready(function() {
      var csrfToken = $('meta[name="csrf-token"]').attr('content');
      var current_organization_state_id = $('#current_organization_state_id').val();

      function getStates() {
        $.ajax({
        url: '<%= get_states_with_id_path %>',
        method: 'GET',
        data: { authenticity_token: csrfToken },
        success: function(data) {
          VirtualSelect.init({
            options: data['states'],
            ele: '#dropdown-states',
            showSelectedOptionsFirst: true,
            selectedValue: current_organization_state_id
          });
        }
        })
      }
      setTimeout(getStates(),3000);

      $('.edit-practice-location-button').on('click', function() {
        var practice_location_id = this.dataset.practiceLocationId;
        newEditPracticeLocation(practice_location_id);
      });

      $('.add-practice-location-button').on('click', function() {
          newEditPracticeLocation();
      });

      function newEditPracticeLocation(practice_location_id) {
        $.ajax({
          url: '<%= new_edit_practice_location_path %>',
          method: 'GET',
          data: { authenticity_token: csrfToken, id: practice_location_id },
          success: function(data) {
            var container = $('#practice_location_modal_container');
            container.html(data.html)
            $('#addLocationModal').modal('toggle')
          }
        })
      }
    });
  </script>

  <style>
    .multi-languages {
      padding: 0;
    }
    #dropdown-states, #dropdown-practice-location-states {
      padding: 0;
      max-width: 100%;
    }
  </style>
<% end %>

<script>
 document.addEventListener("DOMContentLoaded", function () {
  const leftPane = document.querySelector(".associate-left-pane");
  const rightPane = document.querySelector(".associate-right-pane");
  const saveButton = document.getElementById("saveProviderAssociations");
  const practiceLocationInput = document.getElementById("practice_location_id");

  // Save Button Click
  saveButton.addEventListener("click", function () {
    // Sirf checked checkboxes ka value lo for associated providers (right pane)
    const associatedProviderIds = Array.from(leftPane.querySelectorAll('input.form-check-input:checked'))
      .map(input => input.value);

    // Sirf checked checkboxes ka value lo for disassociated providers (left pane)
    const disassociatedProviderIds = Array.from(rightPane.querySelectorAll('input.form-check-input:checked'))
      .map(input => input.value);

    // Hidden inputs me JSON set karo
    document.getElementById("associated_providers").value = JSON.stringify(associatedProviderIds);
    document.getElementById("disassociated_providers").value = JSON.stringify(disassociatedProviderIds);

    // Form submit karo
    const form = document.getElementById("associateProvidersForm");
    const formData = new FormData(form);

    fetch(form.action, {
      method: "POST",
      body: formData,
      headers: {
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      }
    })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          window.location.reload();
        } else {
          alert("Error saving provider associations.");
        }
      })
      .catch(error => {
        console.error("Error:", error);
        alert("Something went wrong.");
      });
  });

  // Fetch Providers
  function fetchProviders(practiceLocationId) {
    fetch(`/group-engage/manage_practice_locations?practice_location_id=${practiceLocationId}`, {
      method: "GET",
      headers: {
        "X-Requested-With": "XMLHttpRequest",
        "Accept": "application/json"
      }
    })
      .then(response => response.json())
      .then(data => updateProviderLists(data))
      .catch(error => console.error("Error fetching practice locations:", error));
  }

  // Update Left & Right Pane
  function updateProviderLists(data) {
    leftPane.innerHTML = "";
    rightPane.innerHTML = "";

    data.non_associated_providers.forEach(provider => {
      leftPane.innerHTML += `
        <div class="provider-item mt-3" draggable="true" id="provider-${provider.id}" data-provider-id="${provider.id}">
          <div class="form-check">
            <input class="form-check-input" type="checkbox" value="${provider.id}" id="check-${provider.id}">
            <label class="form-check-label" for="check-${provider.id}">${provider.full_name}</label>
          </div>
        </div>`;
    });

    data.providers.forEach(provider => {
      rightPane.innerHTML += `
        <div class="provider-item mt-3" draggable="true" id="provider-${provider.id}" data-provider-id="${provider.id}">
          <div class="form-check">
            <input class="form-check-input" type="checkbox" value="${provider.id}" id="check-${provider.id}">
            <label class="form-check-label" for="check-${provider.id}">${provider.full_name}</label>
          </div>
        </div>`;
    });

    initializeDragAndDrop();
  }

  // Button to Fetch Providers
  document.querySelectorAll(".associate-provider-button").forEach(button => {
    button.addEventListener("click", function () {
      const practiceLocationId = this.getAttribute("data-practice-location-id");
      practiceLocationInput.value = practiceLocationId;
      fetchProviders(practiceLocationId);
    });
  });

  // Drag and Drop Logic
    function initializeDragAndDrop() {
    document.querySelectorAll(".provider-item").forEach(provider => {
      provider.addEventListener("dragstart", (e) => {
        e.dataTransfer.setData("text/plain", provider.dataset.providerId);
        e.target.classList.add("dragging");
      });

      provider.addEventListener("dragend", (e) => {
        e.target.classList.remove("dragging");
      });
    });

    [leftPane, rightPane].forEach(pane => {
      pane.addEventListener("dragover", (e) => {
        e.preventDefault();
        pane.classList.add("drag-over");
      });

      pane.addEventListener("dragleave", () => {
        pane.classList.remove("drag-over");
      });

      pane.addEventListener("drop", (e) => {
        e.preventDefault();
        pane.classList.remove("drag-over");

        let providerId = e.dataTransfer.getData("text/plain");
        let draggedElement = document.getElementById(`provider-${providerId}`);

        if (draggedElement && !pane.contains(draggedElement)) {
          pane.appendChild(draggedElement);

          // Checkbox update karte hain:
          let checkbox = draggedElement.querySelector("input.form-check-input");
          if (checkbox) {
            checkbox.checked = pane.classList.contains("associate-right-pane"); // agar right pane me hai to checked, left pane to unchecked
          }

          // Optional: Agar turant server update chahiye on drag-drop, to uncomment karo:
          /*
          let isAssociated = pane.classList.contains("associate-right-pane");
          updateProviderAssociation([providerId], isAssociated);
          */
        }
      });
    });
  }

  // API call after drag-and-drop
  function updateProviderAssociation(providerIds, isAssociated) {
    let formData = new FormData();
    formData.append("practice_location_id", practiceLocationInput.value);

    if (isAssociated) {
      formData.append("associated_providers", JSON.stringify(providerIds));
    } else {
      formData.append("disassociated_providers", JSON.stringify(providerIds));
    }

    fetch("/update_provider_associations", {
      method: "POST",
      headers: {
        "X-CSRF-Token": document.querySelector("meta[name='csrf-token']").getAttribute("content"),
        "Accept": "application/json"
      },
      body: formData
    })
      .then(response => response.json())
      .then(data => {
        if (data.status === "success") {
          console.log("Provider association updated successfully.");
        } else {
          alert("Error updating provider association.");
        }
      })
      .catch(error => console.error("Error updating provider association:", error));
  }
});

</script>


<style>
  .associate-pane {
    min-height: 300px;
    border: 2px dashed #ccc;
    border-radius: 10px;
    padding: 15px;
    background-color: #f8f9fa;
    transition: background-color 0.3s ease;
  }

  .associate-pane.drag-over {
    background-color: #e3f2fd;
    border-color: #007bff;
  }

  .provider-item {
    background: white;
    padding: 10px 15px;
    margin: 8px 0;
    border-radius: 5px;
    border: 1px solid #ddd;
    cursor: grab;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .provider-item:active {
    transform: scale(1.05);
    box-shadow: 3px 3px 7px rgba(0, 0, 0, 0.2);
  }

  .provider-item:hover {
    background: #f1f1f1;
  }
</style>
