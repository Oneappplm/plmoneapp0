
<div class="col-lg-12">

   <%= form_for @enroll_group, html: { multipart: true } do |f| %>

   <% if @enroll_group.errors.any? %>
      <div id="error_explanation" class="row mb-3">
         <div class="col-lg-12">
            <h2><%= pluralize(@enroll_group.errors.count, "error") %> prohibited this enrollment provider from being saved:</h2>
            <ul>
               <% @enroll_group.errors.full_messages.each do |message| %>
               <li><%= message %></li>
               <% end %>
            </ul>
         </div>
      </div>
   <% end %>
   <div class="row mb-3">
      <div class="col-lg-12">
         <label for="" class="text-dark-grey">Group Name</label>
         <%= f.select :group_id, options_for_select(@enrollment_groups.pluck(:group_name, :id), @enroll_group.group_id), {prompt: 'Select option'}, {:class => 'form-select border border-dark select-with-show', data: {show: 'client_dco'}}  %>
      </div>
      <div class="col-lg-12 my-3 <%= @enroll_group.dco.nil? ? 'd-none' : '' %>" id="client_dco">
         <!-- new field -->
         <label class="text-dark-grey">DCO/Practice Location</label>
         <%= f.select :dco, options_for_select(group_dcos.pluck(:dco_name, :id), @enroll_group.dco), {prompt: 'Select option'}, {:class => 'form-select border border-dark'}  %>
      </div>
   </div>

   <div class="row mb-1">
      <div class="col-lg-12">
         <label class="text-dark-grey">Name of person who can answer questions related to enrollment for the group</label>
      </div>
   </div>
   <div class="row mb-3">
      <div class="col-lg-6">
         <label class="text-dark-grey">First Name </label>
         <%= f.text_field :first_name, placeholder: 'Type here... ', class: 'form-control border border-dark' %>
      </div>
      <div class="col-lg-6">
         <label class="text-dark-grey">Middle Name(optional) </label>
         <%= f.text_field :middle_name, placeholder: 'Type here... ', class: 'form-control border border-dark' %>
      </div>
   </div>
   <div class="row mb-3">
      <div class="col-lg-6">
         <label class="text-dark-grey">Last Name </label>
         <%= f.text_field :last_name, placeholder: 'Type here... ', class: 'form-control border border-dark' %>
      </div>
      <div class="col-lg-6">
         <label class="text-dark-grey">Suffix(optional)</label>
         <%= f.select :suffix, options_for_select(['Jr.', 'Sr.', 'II', 'III', 'IV', 'V'], f.object.suffix), { prompt: 'Select Option' }, { class: 'form-select border border-dark' } %>
      </div>
   </div>
   <div class="row mb-3">
      <div class="col-lg-6">
         <label class="text-dark-grey">Telephone Number *</label>
         <%= f.telephone_field :telephone_number, placeholder: 'Type here... ', class: 'form-control border border-dark' %>
      </div>
      <div class="col-lg-6">
         <label class="text-dark-grey">Email Address *</label>
         <%= f.text_field :email,  placeholder: 'Type here... ', class: 'form-control border border-dark' %>
      </div>
   </div>
   <div class="row mb-3">
      <div class="col-lg-12">
         <div class="row">
            <div id="details">
               <div class="fields">
                  <% @index = 0 %>
                  <%= f.fields_for :details do |details| %>
                  <%= render 'details_fields', f: details %>
                  <% end %>
               </div>
               <div class="row">
                  <div class="col-lg-12 text-center">
                     <div class="links mt-2">
                        <button type="button" class="add_association btn btn-primary btn-xs" > Add New Payor </button>
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div>
   </div>
   <div class="row">
      <div class="col-lg-12 d-flex justify-content-end pe-5">
         <button class="btn btn-primary btn-md">Submit</button>
      </div>
   </div>
</div>
   <% end %>

<%= content_for :js do %>
<script>
   $(document).ready(function(){
    $('.enrollment-payor').each(function(){
      var id = $(this).attr('id');
      var value = $(this).data('value');

      setTimeout(function(){
         $.get('<%= enrollment_payers_multi_select_data_path %>', function(data){
            VirtualSelect.init({ele: '#' + id, search: true });
            document.querySelector('#' + id).setOptions(data['result']);
            document.querySelector('#' + id).setValue(value);
         });
      }, 1000);
    });
   });

   $(document).ready(function(){
    $('.payor-state').each(function(){
      var id = $(this).attr('id');
      var value = $(this).data('value');

      setTimeout(function(){
         $.get('<%= states_multi_select_data_path %>', function(data){
            VirtualSelect.init({ele: '#' + id, search: true });
            document.querySelector('#' + id).setOptions(data['result']);
            document.querySelector('#' + id).setValue(value);
         });
      }, 1000);
    });
   });
</script>
<% end %>

<script>
   $(document).ready(function () {

      $("#details").on("click", ".add_association", function () {
         var detailsFields = $("#details .field");
         var newEnrollmentdetails = detailsFields.last().clone();
         var lastId = detailsFields.length - 1;
         var newId = new Date().getTime();
         //var enrollment_payer_id = "enroll_group_details_attributes_" + newId + "_enrollment_payer";
         var payer_state_id = "enroll_group_details_attributes_" + newId + "_payer_state";

         // Update the IDs in the cloned HTML content
         newEnrollmentdetails.find("[id^='enroll_group_details_attributes_']").each(function() {
            var oldId = $(this).attr("id");
            var newIdValue = oldId.replace(/\d+/, newId);
            $(this).attr("id", newIdValue);
            $(this).attr("name", $(this).attr("name").replace(/\d+/, newId));
            $(this).val('');
         });

         newEnrollmentdetails.find('div.toggle-container').each(function(){
            $(this).attr('id', $(this).attr('id').replace(/\d+/, newId));
         });

         // find input with name _destroy
         newEnrollmentdetails.find('input[type="hidden"]').each(function(){
            if($(this).attr('name').includes('_destroy')){
               $(this).attr('name', $(this).attr('name').replace(/\d+/, newId));
            }
         });

         // find button with remove-dynamic-fields class
         newEnrollmentdetails.find('button.remove-dynamic-fields').each(function(){
            if($(this).css('display') !== 'none'){
               var parentQuestionFields = $(this).closest('.question-field');
               parentQuestionFields.remove();
            }
         });

         newEnrollmentdetails.find('button.btn-toggle').each(function(){
            $(this).attr('data-tochange', $(this).data('tochange').replace(/\d+/, newId));
            $(this).attr('data-toshow', $(this).data('toshow').replace(/\d+/, newId));

            // find closest element input with type="hidden"
            var hidden_input = $(this).parent().parent().find('input[type="hidden"]');
            hidden_input.attr('id', hidden_input.attr('id').replace(/\d+/, newId));
            hidden_input.attr('name', hidden_input.attr('name').replace(/\d+/, newId));

            $(this).on('click', function(){
               if($(this).hasClass('to-change-value')) {
                  var to_change = $(this).data('tochange').replace(/\d+/, newId);
                  var to_show = $(this).data('toshow').replace(/\d+/, newId);
                  $(this).toggleClass('active');
                  $(this).hasClass('active') ? $('input[name="'+to_change+'"]').val('yes') : $('input[name="'+to_change+'"]').val('no');
                  $('#' + to_show).toggleClass('d-none');
               }
            });
         });




         setTimeout(function(){
             $.get('<%= states_multi_select_data_path %>', function(data){
               VirtualSelect.init({ele: '#' + payer_state_id, search: true });
               document.querySelector('#' + payer_state_id).setOptions(data['result']);
               // document.querySelector('#' + payer_state_id).setValue(value);
            });
         }, 500);

         $("#details .fields").append(newEnrollmentdetails);

      });

      $(document).on('change', '.select-show', function () {
         var revalidated = $(this).val();
         if (revalidated == 'yes') {

            showHideDetailFields($(this), '.revalidated-select', 'show')
         } else {
            showHideDetailFields($(this), '.revalidated-select', 'hide')
         }
      })

      $(document).on('change', '.select-show-contracts', function () {
         var contracts = $(this).val();
         if (contracts == 'yes') {

            showHideDetailFields($(this), '.contracts-name', 'show')
         } else {
            showHideDetailFields($(this), '.contracts-name', 'hide')
         }
      })

      function showHideDetailFields(dropDown, divClass, mode) {
         if (mode == 'show')
            dropDown.parent().parent().parent().find(divClass).removeClass('d-none');
         else
            dropDown.parent().parent().parent().find(divClass).addClass('d-none');
      }

   })

   // For searcheable enrollment payers
var selected_enrollment_payers = [];
var enroll_group_id = "<%= @enroll_group.id %>";
$(document).ready(function() {
  setTimeout(function() {
    getEnrollmentPayers();
  }, 500);
});

var enrollment_payers = [];
function getEnrollmentPayers() {
  $.ajax({
    url: '<%= enrollment_payers_multi_select_data_path %>',
    method: 'GET',
    data: {
      authenticity_token: csrfToken,
      enroll_group_id: enroll_group_id
    },
    success: function(data) {
      VirtualSelect.init({
        options: data['result'],
        ele: '#enrollment-payor',
        multiple: false,
        search: true,
        showSelectedOptionsFirst: true,
        selectedValue: data['options']['selected_enrollment_payor'],
      });
    }
  });
}
</script>

<script>

$(document).ready(function () {
  // Hide the delete button for the first element on page load
  // find all .questions and find all .remove-dynamic-fields and hide first
   $('.questions').each(function(){
      $(this).find('.remove-dynamic-fields').first().hide();
   });
});

 // Function to add new nested fields
 function addQuestions(btn){

   var parentQuestions =  $(btn).closest('.questions');
   var parentQuestionFields = $(btn).closest('.question-fields').first();
   var questionField = $(parentQuestionFields).find('.question-field').last().clone();
   var newIndex = $(parentQuestions).find('.question-field').length;

   questionField.find('input[type="text"][name*="[questions_attributes]"]').each(function () {
      var name = $(this).attr('name').replace(/\[questions_attributes\]\[\d+\]/g, '[questions_attributes][' + newIndex + ']');
      var id = $(this).attr('id').replace(/\[questions_attributes\]\[\d+\]/g, '[questions_attributes][' + newIndex + ']');

      $(this).attr('name', name);
      $(this).attr('id', id);
      $(this).val(''); // Clear input values for the new fields
   });


   questionField.find('.remove-dynamic-fields').show();

   // console.log(questionField)
   parentQuestionFields.append(questionField);
   // parentQuestions.append(parentQuestionFields);
 }

 // Function to remove a nested field
 function deleteQuestions(btn){
   var parentQuestions =  $(btn).closest('.questions');
   var parentQuestionFields = $(btn).closest('.question-fields .question-field');
   // find closest checkbox _destroy and toggle it
   var checkbox = $(parentQuestionFields).find('input[type="checkbox"][name*="[questions_attributes]"]');
   checkbox.prop('checked', !checkbox.prop('checked'));
   $(parentQuestionFields).fadeOut();

 }

</script>
<style>
  .multi-select {
    padding: 0;
  }
  .single-select {
    width: 100%;
    max-width: 1000px;
    padding: 0;
   }
</style>
