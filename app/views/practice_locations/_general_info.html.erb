<div class="form-row row">
   <div class="col-xl-6">
      <label for=""><span class="text-danger">*</span> Location</label>
      <%= f.text_field :location, class: 'form-control', placeholder: 'Type here...', required: true, autocomplete: 'off' %>
   </div>
   <div class="col-xl-6">
      <label for="">Legal Name</label>
      <%= f.text_field :legal_name, class: 'form-control', placeholder: 'Type here...' %>
   </div>
</div>
<div class="form-row row">
   <div class="col-xl-6">
      <label for=""><span class="text-danger required">*</span> Address 1</label>
      <%= f.text_field :address1, class: 'form-control', placeholder: 'Type here...', required: true, autocomplete: 'off' %>
   </div>
   <div class="col-xl-6">
      <label for="">Address 2</label>
      <%= f.text_field :address2, class: 'form-control', placeholder: 'Type here...', autocomplete: 'off' %>
   </div>
</div>
<div class="form-row row">
   <div class="col-xl-6">
      <label for=""><span class="text-danger">*</span> City</label>
      <%= f.text_field :city, class: 'form-control', placeholder: 'Type here...', required: true, autocomplete: 'off' %>
   </div>
   <div class="col-xl-6">
      <label for=""><span class="text-danger">*</span> State</label>
      <%= f.select :state_id, State.all.pluck(:name, :id), { prompt: "Select a State" }, { class: "form-select", required: true } %>
  </div>
</div>
<div class="form-row row">
   <div class="col-xl-6">
      <label for=""><span class="text-danger">*</span> ZIP Code</label>
      <%= f.text_field :zip_code, class: 'form-control', placeholder: 'Type here...', required: true, pattern: '\d{5}', maxlength: 5, title: 'Enter a 5-digit numeric value', autocomplete: 'off' %>
   </div>
   <div class="col-xl-6">
      <label for=""><span class="text-danger">*</span> Phone Number</label>
      <%= f.text_field :phone_number, class: 'form-control', placeholder: 'Type here...', required: true, pattern: '^\+?\d{10,15}$', maxlength: 15, title: "Enter a valid phone number (10-15 digits, optional '+')", autocomplete: 'off' %>
   </div>
</div>
<div class="form-row row">
   <div class="col-xl-6">
      <label for="">Fax Number</label>
      <%= f.text_field :fax_number, class: 'form-control', placeholder: 'Type here...', autocomplete: 'off' %>
   </div>
   <div class="col-xl-6">
      <label for=""><span class="text-danger">*</span> Email</label>
      <%= f.text_field :email, class: 'form-control', placeholder: 'Type here...', required: true,  autocomplete: 'off', pattern: '\A[^@\s]+@[^@\s]+\z', message: "must be a valid email format" %>
   </div>
</div>
<div class="form-row row">
   <div class="col-xl-6">
      <label for=""><span class="text-danger">*</span> Group Tax ID Number</label>
      <%= f.text_field :group_tax_number, class: 'form-control taxid-input', placeholder: 'Type here...', required: true , maxlength: '10', pattern: "[0-9]{2}-[0-9]{7}", title: 'Enter Group Tax ID' %>
   </div>
   <div class="col-xl-6">
      <label for="">Group NPI Number</label>
      <%= f.text_field :group_npi_number, class: 'form-control', placeholder: 'Type here...', maxlength: 10, autocomplete: 'off'  %>
   </div>
</div>
<div class="form-row row">
   <div class="col-xl-6 d-flex align-items-center">
      <div class="form-check">
         <%= f.check_box :have_group_tax_number, class: 'form-check-input' %>
         <label class="form-check-label" for="grp-tax-check">
			I don't have a Group TaxID
         </label>
      </div>
   </div>
   <div class="col-xl-6">
      <label for="">Group NPI Number Effective Date</label>
      <%= f.date_field :group_npi_number_effective_date, class: 'form-control', placeholder: 'Type here...' %>
   </div>
</div>
<div class="form-row row">
   <div class="col-xl-6">
      <label for="">Enter languages that your staffs speaks</label>
      <%= HtmlUtils.multi_select_dropdown name: "practice_location[languages_speak]", id: 'practice_location_languages_speak', classes: 'multi-languages spoken'%>
   </div>
   <div class="col-xl-6">
      <label for="">Enter languages that your staffs writes</label>
      <%= HtmlUtils.multi_select_dropdown name: "practice_location[languages_write]", id: 'practice_location_languages_write', classes: 'multi-languages written'%>
   </div>
</div>
<div class="form-row row">
   <div class="col-xl-6">
      <label for="">Are interpreters available at this location?</label>
      <div class="d-flex align-items-center gap-3">
         <div class="form-check">
            <%= f.radio_button :interpreters_available, 'yes', class: 'form-check-input', id: 'inter-yes'%>
            <label class="form-check-label" for="inter-yes">
            Yes
            </label>
         </div>
         <div class="form-check">
            <%= f.radio_button :interpreters_available, 'no', class: 'form-check-input', id: 'inter-no'%>
            <label class="form-check-label" for="inter-no">
            No
            </label>
         </div>
      </div>
   </div>
</div>

<%= render "providers/js_components/string_array_modifier"%>

<script>
   $(document).ready(function() {
      var csrfToken = $('meta[name="csrf-token"]').attr('content');
      var taxidInput = document.querySelector('.taxid-input');
      var languages_dropdown = '.multi-languages';
      var practice_location_languages_spoken= stringArrayModifier('<%= @practice_location.languages_speak&.split(",") %>');
      var practice_location_languages_written= stringArrayModifier('<%= @practice_location.languages_write&.split(",") %>');
      var practice_location_state_id = $('#practice_location_state_id').val();

      taxidInput.addEventListener('input', function (e) {
         // Remove non-numeric and non-dash characters
         const cleanedValue = e.target.value.replace(/[^0-9-]/g, '');

         // Limit the length to 10 characters
         const formattedValue = cleanedValue.slice(0, 10);

         // Apply the desired format (##-#######)
         if (formattedValue.length >= 2 && formattedValue.charAt(2) !== '-') {
            taxidInput.value = formattedValue.slice(0, 2) + '-' + formattedValue.slice(2);
         } else {
            taxidInput.value = formattedValue;
         }
      });

      function getLanguages(selected_values, field) {
        $.ajax({
          url: '<%= get_languages_path %>',
          method: 'GET',
          data: { authenticity_token: csrfToken },
        success: function(data) {
          VirtualSelect.init({
            options: data['languages'],
            ele: field,
            multiple: true,
            showSelectedOptionsFirst: true,
            selectedValue: selected_values
          });
        }
        })
      }

      function getStates() {
         $.ajax({
         url: '<%= get_states_with_id_path %>',
         method: 'GET',
         data: { authenticity_token: csrfToken },
         success: function(data) {
            VirtualSelect.init({
            options: data['states'],
            ele: '#dropdown-practice-location-states',
            showSelectedOptionsFirst: true,
            selectedValue: practice_location_state_id
            });
         }
         })
      }
      setTimeout(getLanguages(practice_location_languages_spoken, '.multi-languages.spoken'),3000);
      setTimeout(getLanguages(practice_location_languages_written, '.multi-languages.written'),3000);
      setTimeout(getStates(),3000);
   })
</script>