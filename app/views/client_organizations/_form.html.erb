<div class="form-row row">
   <div class="col-xl-6 mt-3">
      <label for=""><span class="text-danger">*</span> Organization Name</label>
      <%= f.text_field :organization_name, class: 'form-control', placeholder: 'Type here...', required: true, autocomplete: 'off' %>
   </div>
   <div class="col-xl-6 mt-3 ">
      <label for=""><span class="text-danger">*</span> Organization Type</label>
      <%= f.select :organization_type, ClientOrganization::ORGANIZATION_TYPE, { prompt: 'Select organization type' }, { class: 'form-select', required: true}%>
   </div>
    <div class="col-xl-6">
      <label for="">Organization NPI</label>
      <%= f.text_field :organization_npi,
            class: 'form-control',
            placeholder: 'Type here...',
            autocomplete: 'off',
            maxlength: 10,
            id: 'organization-npi-input',
            oninput: 'validateOrganizationNpi()' %>
      <small id="organization-npi-error" class="text-danger d-none">
        NPI must contain digits only (10 digits max)
      </small>
    </div>
</div>
<div class="form-row row">
 <h6 class="mt-3">Organization Physical Address</h6>
   <div class="col-xl-6 mt-3 ">
      <label for=""><span class="text-danger">*</span> Address 1</label>
      <%= f.text_field :organization_address_1, class: 'form-control', placeholder: 'Type here...', required: true, autocomplete: 'off'%>
   </div>
   <div class="col-xl-6 mt-3 ">
      <label for="">Address 2</label>
      <%= f.text_field :organization_address_2, class: 'form-control', placeholder: 'Type here...', autocomplete: 'off'%>
   </div>
</div>
<div class="form-row row">
    <div class="col-xl-6">
      <label for=""><span class="text-danger">*</span> City</label>
      <%= f.text_field :organization_city,
            class: 'form-control',
            placeholder: 'Type here...',
            required: true,
            autocomplete: 'off',
            id: 'organization-city-input',
            onkeypress: 'return isOrganizationCityKey(event)',
            oninput: 'validateOrganizationCity()' %>
      <small id="organization-city-error" class="text-danger d-none">
        City can only contain letters, spaces, periods (.), apostrophes (â€™), and hyphens (-)
      </small>
    </div>
   <div class="col-xl-6">
     <label for=""><span class="text-danger">*</span> State</label>
     <%= f.select :organization_state_id, State.all.pluck(:name, :id), { prompt: "Select a State" }, { class: "form-select", required: true } %>
   </div>

   <div class="col-xl-6 ">
      <label for=""><span class="text-danger">*</span> Zip Code</label>
      <%= f.text_field :organization_zipcode, class: 'form-control', placeholder: 'Type here...', required: true, pattern: '\d{5}', maxlength: 5, title: 'Enter a 5-digit numeric value', autocomplete: 'off'%>
   </div>
</div>
<div class="form-row row">
<div class="col-xl-6 mt-3 ">
      <label for=""><span class="text-danger">*</span> Phone Number</label>
      <%= f.text_field :organization_phone_number, class: 'form-control', placeholder: 'Type here...', required: true, pattern: '^\+?\d{10,15}$', maxlength: 15, title: "Enter a valid phone number (10-15 digits, optional '+')", autocomplete: 'off' %>

   </div>
   <div class="col-xl-6 mt-3 ">
      <label for=""><span class="text-danger">*</span> Fax Number</label>
      <%= f.text_field :organization_fax_number, class: 'form-control', placeholder: 'Type here...', required: true, pattern: '^\+?\d{10,15}$', maxlength: 15, title: "Enter a valid phone number (10-15 digits, optional '+')", autocomplete: 'off'%>
   </div>
</div>
<div class="form-row row">
   <div class="col-xl-6 ">
      <label for=""><span class="text-danger">*</span> Organization DBA Name</label>
      <%= f.text_field :organization_dba_name, class: 'form-control', placeholder: 'Type here...', required: true, autocomplete: 'off'%>
   </div>
    <div class="col-xl-6">
      <label for=""><span class="text-danger">*</span> Organization Tax ID</label>
      <%= f.text_field :organization_tax_id,
            class: 'form-control',
            placeholder: 'Type here...',
            required: true,
            autocomplete: 'off',
            maxlength: 9,
            id: 'org-tax-id-input',
            oninput: 'validateOrgTaxId()' %>
      <small id="org-tax-id-error" class="text-danger d-none">
        Organization Tax ID must contain digits only (9 digits max)
      </small>
    </div>
 </div>
</div>
<script>
  function validateOrgTaxId() {
    const input = document.getElementById("org-tax-id-input");
    const error = document.getElementById("org-tax-id-error");

    const cleaned = input.value.replace(/\D/g, ''); // remove non-digits
    if (input.value !== cleaned) {
      input.value = cleaned;
      error.classList.remove("d-none");
    } else {
      error.classList.add("d-none");
    }
  }
  function isOrganizationCityKey(evt) {
    const charCode = evt.which ? evt.which : evt.keyCode;
    const error = document.getElementById("organization-city-error");

    if (
      (charCode >= 65 && charCode <= 90) || // A-Z
      (charCode >= 97 && charCode <= 122) || // a-z
      charCode === 32 || // space
      charCode === 46 || // .
      charCode === 39 || // '
      charCode === 45    // -
    ) {
      error.classList.add("d-none");
      return true;
    }

    error.classList.remove("d-none");
    return false;
  }

  function validateOrganizationCity() {
    const input = document.getElementById("organization-city-input");
    const error = document.getElementById("organization-city-error");

    const cleaned = input.value.replace(/[^a-zA-Z\s.\'\-]/g, '');
    input.value = cleaned;

    if (input.value !== cleaned || cleaned.trim() === '') {
      error.classList.remove("d-none");
    } else {
      error.classList.add("d-none");
    }
  }
  function validateOrganizationNpi() {
    const input = document.getElementById("organization-npi-input");
    const error = document.getElementById("organization-npi-error");

    const cleaned = input.value.replace(/\D/g, ''); // keep only digits
    if (input.value !== cleaned) {
      input.value = cleaned;
      error.classList.remove("d-none");
    } else {
      error.classList.add("d-none");
    }
  }
</script>
