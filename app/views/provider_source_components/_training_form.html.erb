<div class="row mb-3">
	<div class="col-lg-6">
		<%= HtmlUtils::dropdown name: 'tf-location', label: 'Training Program Location <span class="text-danger"> *</span>' %>
	</div>
</div>
<div class="row mb-3">
	<div class="col-lg-12">
		<label class="text-dark-grey">Training Program Name <span class="text-danger">*</span></label>
		<input type="text" class="form-control border-dark" name="tf-psn">
	</div>
</div>

<div class="row mb-3">
	<div class="col-lg-6">
		<label class="text-dark-grey">Address Line 1 <span class="text-danger">*</span></label>
		<input type="text" class="form-control border-dark" name="tf-address-line1">
	</div>
	<div class="col-lg-6">
		<label class="text-dark-grey">Address Line 2</label>
		<input type="text" class="form-control border-dark" name="tf-address-line2">
	</div>
</div>

<div class="row mb-3">
	<div class="col-lg-6">
		<label class="text-dark-grey">City <span class="text-danger">*</span></label>
		<input type="text" class="form-control border-dark" name="tf-city">
		<div class="text-danger validation-error-msg d-none"></div>
	</div>
	<div class="col-lg-6">
		<label class="text-dark-grey">Zip Code <span class="text-danger">*</span></label>
		<input type="text" class="form-control border-dark" name="tf-zipcode">
		<div class="text-danger validation-error-msg d-none"></div>
	</div>
</div>

<div class="row mb-3">
	<div class="col-lg-6">
		<div class="row">
			<div class="col-lg-8">
				<label class="text-dark-grey">Telephone Number</label>
				<input type="text" class="form-control border-dark" name="tf-telephone-number">
				<div class="text-danger validation-error-msg d-none"></div>
			</div>
			<div class="col-lg-4">
				<label class="text-dark-grey">Ext</label>
				<input type="text" class="form-control border-dark" name="tf-ext">
				<div class="text-danger validation-error-msg d-none"></div>
			</div>
		</div>
	</div>
	<div class="col-lg-6">
		<label class="text-dark-grey">Fax Number</label>
		<input type="text" class="form-control border-dark" name="tf-fax-number">
		<div class="text-danger validation-error-msg d-none"></div>
	</div>
</div>
<div class="row mb-3">
	<div class="col-lg-5">
		<label class="text-dark-grey">Email</label>
		<input type="email"  class="form-control border-dark" name="tf-email">
	</div>
</div>

	 <div class="row mb-3">
    <div class="col-lg-12">
			<label class="text-dark-grey">Type of Training <span class="text-danger">*</span></label>
			<small>If your training program was rotating or transitional, please create a separate training record for each rotation including the specialty or department and the time associated with each. </small>
			<%= HtmlUtils::dropdown name: 'tr_training_types', label: '' %>
		</div>
	</div>
	<div class="row mb-3">
    <div class="col-lg-12">
			<%= HtmlUtils::dropdown name: 'tr_specialties', label: 'Specialty <span class="text-danger"> *</span>' %>
		</div>
	</div>

<div class="row mb-3">
	<div class="col-lg-6">
		<label class="text-dark-grey">Program Director First Name</label>
		<input type="text" class="form-control border-dark" name="tf-pd-first-name">
		<div class="text-danger validation-error-msg d-none"></div>
	</div>
	<div class="col-lg-6">
		<label class="text-dark-grey">Program Director Last Name</label>
		<input type="text" class="form-control border-dark" name="tf-pd-last-name">
		<div class="text-danger validation-error-msg d-none"></div>
	</div>
</div>
<div class="row mb-3">
	<div class="col-lg-12">
		<label class="text-dark-grey">Program Director Degree</label>
		<input type="text" name="tf-pf-degree" class="form-control border-dark">
		<div class="text-danger validation-error-msg d-none"></div>
	</div>
</div>
<div class="row mb-3">
	<div class="col-lg-12">
		<label class="text-dark-grey">Program Director Email Address</label>
		<input type="email" name="tf-pd-email-address" class="form-control border-dark">
	</div>
</div>
<div class="row mb-3">
	<div class="col-lg-6">
		<label class="text-dark-grey">Start Date <span class="text-danger">*</span></label>
		<input type="date" class="form-control border-dark" name="tf-start-date">
	</div>
	<div class="col-lg-6">
		<label class="text-dark-grey">End(Graduation) Date <span class="text-danger">*</span></label>
		<input type="date" class="form-control border-dark" name="tf-end-date">
	</div>
</div>
	<div class="row mb-3">
		<div class="d-flex align-items-center my-3">
			<label class="me-3"> Did you complete your training at this institution? <span class="text-danger"> *</span></label>
			
			<button type="button" class="btn btn-outline-primary rounded-circle small-btn me-2" id="yes_button">✓</button>
			<button type="button" class="btn btn-outline-primary rounded-circle small-btn" id="no_button">✗</button>

			<input type="hidden" id="incomplete_training" name="incomplete_training">
		</div>

		<div id="training_reason_form" class="d-none">
			<%= render partial: 'provider_source_components/training_reason_form' %>
		</div>
  </div>
<div class="row mb-3">
	<div class="col-lg-6">
		<label class="text-dark-grey">University Affiliated Program</label>
		<input type="text" class="form-control border-dark" name="tfu-affiliated-program">
		<div class="text-danger validation-error-msg d-none"></div>
	</div>
	<div class="col-lg-6 my-1">
		<%= HtmlUtils::dropdown name: 'tfu_affiliated_location', label: 'University Affiliated Program Location' %>
	</div>
</div>
<div class="row mb-3">
	<div class="col-lg-6">
		<label class="text-dark-grey">Address Line 1</label>
		<input type="text" class="form-control border-dark" name="tfu-address-line1">
	</div>
	<div class="col-lg-6">
		<label class="text-dark-grey">Address Line 2</label>
		<input type="text" class="form-control border-dark" name="tfu-address-line2">
	</div>
</div>

<div class="row mb-3">
	<div class="col-lg-6">
		<label class="text-dark-grey">City</label>
		<input type="text" class="form-control border-dark" name="tfu-city">
		<div class="text-danger validation-error-msg d-none"></div>
	</div>
	<div class="col-lg-6">
		<label class="text-dark-grey">Zip Code</label>
		<input type="text" class="form-control border-dark" name="tfu-zipcode">
		<div class="text-danger validation-error-msg d-none"></div>
	</div>
</div>

<div class="row mb-3">
	<div class="col-lg-6">
		<div class="row">
			<div class="col-lg-8">
				<label class="text-dark-grey">Telephone Number</label>
				<input type="text" class="form-control border-dark" name="tfu-telephone-number">
					<div class="text-danger validation-error-msg d-none"></div>
			</div>
			<div class="col-lg-4">
				<label class="text-dark-grey">Ext</label>
				<input type="text" class="form-control border-dark" name="tfu-ext">
					<div class="text-danger validation-error-msg d-none"></div>
			</div>
		</div>
	</div>
	<div class="col-lg-6">
		<label class="text-dark-grey">Fax Number</label>
		<input type="text" class="form-control border-dark" name="tfu-fax-number">
			<div class="text-danger validation-error-msg d-none"></div>
	</div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", function() {
  const yesButton = document.getElementById("yes_button");
  const noButton = document.getElementById("no_button");
  const formSection = document.getElementById("training_reason_form");
  const hiddenInput = document.getElementById("incomplete_training");

  function autosave(field, value) {
    $.ajax({
      url: '/provider_sources/autosave',
      method: 'POST',
      dataType: 'json',
      data: {
        authenticity_token: $('meta[name="csrf-token"]').attr('content'),
        field_name: field,
        value: value
      },
      success: function(response) {
        console.log('Autosaved', field, value);
      },
      error: function(error) {
        console.error('Autosave failed for', field, value, error);
      }
    });
  }

  yesButton.addEventListener("click", function() {
    formSection.classList.add("d-none");
    hiddenInput.value = "yes";
    autosave("incomplete_training", "yes");

    yesButton.classList.add("btn-primary");
    yesButton.classList.remove("btn-outline-primary");

    noButton.classList.add("btn-outline-primary");
    noButton.classList.remove("btn-primary");
  });

  noButton.addEventListener("click", function() {
    formSection.classList.remove("d-none");
    hiddenInput.value = "no";
    autosave("incomplete_training", "no");

    noButton.classList.add("btn-primary");
    noButton.classList.remove("btn-outline-primary");

    yesButton.classList.add("btn-outline-primary");
    yesButton.classList.remove("btn-primary");
  });
});

$(document).ready(function () {
  function showError($input, message) {
    $input.addClass('is-invalid');
    const $errorDiv = $input.siblings('.validation-error-msg');
    if ($errorDiv.length) {
      $errorDiv.text(message).removeClass('d-none');
    }
  }

  function clearError($input) {
    $input.removeClass('is-invalid');
    const $errorDiv = $input.siblings('.validation-error-msg');
    if ($errorDiv.length) {
      $errorDiv.addClass('d-none');
    }
  }

  const validators = [
    {
      selector: 'input[name="tf-city"], input[name="tfu-city"], input[name="tf-pd-last-name"], input[name="tf-psn"], input[name="tf-pd-first-name"]',
      regex: /^[a-zA-Z\s]*$/,
      message: 'Only alphabets and spaces allowed.'
    },
    {
      selector: 'input[name="tf-zipcode"], input[name="tfu-zipcode"]',
      regex: /^\d{5,6}$/,
      message: 'Zip code must be 5 or 6 digits.'
    },
    {
      selector: 'input[name="tf-email"], input[name="tf-pd-email-address"]',
      regex: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
      message: 'Enter a valid email address.'
    },
    {
      selector: 'input[name*="telephone-number"], input[name*="fax-number"], input[name*="ext"]',
      regex: /^[0-9+\-\s]*$/,
      message: 'Only numbers, +, and - are allowed.'
    },
    {
      selector: 'input[name="tfu-affiliated-program"]',
      regex: /^[a-zA-Z0-9\s.,\-()&]*$/,
      message: 'Invalid characters in program name.'
    },
    {
      selector: 'input[name="tf-pf-degree"]',
      regex: /^[a-zA-Z.\s]*$/,
      message: 'Only alphabets, spaces, and periods allowed.'
    }
  ];

  validators.forEach(({ selector, regex, message }) => {
    $(document).on('input', selector, function () {
      const $this = $(this);
      if (!regex.test($this.val())) {
        showError($this, message);
      } else {
        clearError($this);
      }
    });
  });
});

</script>
<style>
  .is-invalid {
	  border-color: red !important;
	}
	.validation-error-msg {
	  font-size: 0.875rem;
	}

</style>
