<!DOCTYPE html>
<html lang="en">
<head>
  <!-- Required Meta Tags Always Come First -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <%= stylesheet_link_tag "application", "custom" %>
  <%= javascript_importmap_tags %>
  <!-- Title -->
  <title>PLM HEALTH ONE APP</title>

  <!-- Favicon -->
  <link rel="shortcut icon" href="./favicon.ico">

  <!-- Font -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">

  <!-- CSS Implementing Plugins -->
  <link rel="stylesheet" href="/dist/assets/vendor/bootstrap-icons/font/bootstrap-icons.css">

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

  <link rel="stylesheet" href="/dist/assets/vendor/daterangepicker/daterangepicker.css">
  <link rel="stylesheet" href="/dist/assets/vendor/tom-select/dist/css/tom-select.bootstrap5.css">

  <script src="https://code.jquery.com/jquery-3.6.4.js" integrity="sha256-a9jBBRygX1Bh5lt8GZjXDzyOB+bWve9EiO7tROUtj/E=" crossorigin="anonymous"></script>
  <script src="jquery.samask-masker.js"></script>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" integrity="sha512-nMNlpuaDPrqlEls3IX/Q56H36qvBASwb3ipuo3MxeWbsQB1881ox0cRv7UPTgBlriqoynt35KjEwgGUeUXIPnw==" crossorigin="anonymous" referrerpolicy="no-referrer" />


  <link rel="preload" href="/dist/assets/css/theme.min.css" data-hs-appearance="default" as="style">
  <link rel="preload" href="/dist/assets/css/theme-dark.min.css" data-hs-appearance="dark" as="style">
  <link rel="stylesheet" href="/dist/virtualcss/virtual-select.min.css" />
  <script src="/dist/virtualcss/virtual-select.min.js"></script>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jvectormap/2.0.5/jquery-jvectormap.css" integrity="sha512-1ZwE8kCr0CknYsK+JYHqxnFqCZ2c17AJ6uTVf6me8UFCZJPE12ujWxnspvRJUb/zciTQ2D58PkJHQk5PLSYJ4Q==" crossorigin="anonymous" referrerpolicy="no-referrer" />
   <!-- fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
  <!-- Icons -->
  <link href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css" rel="stylesheet">
  <style data-hs-appearance-onload-styles>
    *
    {
      transition: unset !important;
    }

    body
    {
      opacity: 0;
    }
  </style>

  <% if controller_name == 'verification_platform'%>
  <style>
    label {
      color: #555 !important;
    }
    input[type=text], input[type=date],input[type=email]  {
      border: 1px solid #132144 !important;
    }
    select {
      border: 1px solid #132144 !important;
    }
  </style>
  <% end %>
		<% yield :css %>
  <script>
            window.hs_config = {"autopath":"@@autopath","deleteLine":"hs-builder:delete","deleteLine:build":"hs-builder:build-delete","deleteLine:/dist":"hs-builder:/dist-delete","previewMode":false,"startPath":"/index.html","vars":{"themeFont":"https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap","version":"?v=1.0"},"layoutBuilder":{"extend":{"switcherSupport":true},"header":{"layoutMode":"default","containerMode":"container-fluid"},"sidebarLayout":"default"},"themeAppearance":{"layoutSkin":"default","sidebarSkin":"default","styles":{"colors":{"primary":"#377dff","transparent":"transparent","white":"#fff","dark":"132144","gray":{"100":"#f9fafc","900":"#1e2022"}},"font":"Inter"}},"languageDirection":{"lang":"en"},"skipFilesFromBundle":{"/dist":["assets/js/hs.theme-appearance.js","assets/js/hs.theme-appearance-charts.js","assets/js/demo.js"],"build":["assets/css/theme.css","assets/vendor/hs-navbar-vertical-aside/dist/hs-navbar-vertical-aside-mini-cache.js","assets/js/demo.js","assets/css/theme-dark.css","assets/css/docs.css","assets/vendor/icon-set/style.css","assets/js/hs.theme-appearance.js","assets/js/hs.theme-appearance-charts.js","node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.min.js","assets/js/demo.js"]},"minifyCSSFiles":["assets/css/theme.css","assets/css/theme-dark.css"],"copyDependencies":{"/dist":{"*assets/js/theme-custom.js":""},"build":{"*assets/js/theme-custom.js":"","node_modules/bootstrap-icons/font/*fonts/**":"assets/css"}},"buildFolder":"","replacePathsToCDN":{},"directoryNames":{"src":"./src","/dist":"/dist","build":"./build"},"fileNames":{"/dist":{"js":"theme.min.js","css":"theme.min.css"},"build":{"css":"theme.min.css","js":"theme.min.js","vendorCSS":"vendor.min.css","vendorJS":"vendor.min.js"}},"fileTypes":"jpg|png|svg|mp4|webm|ogv|json"}
            window.hs_config.gulpRGBA = (p1) => {
  const options = p1.split(',')
  const hex = options[0].toString()
  const transparent = options[1].toString()

  var c;
  if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){
    c= hex.substring(1).split('');
    if(c.length== 3){
      c= [c[0], c[0], c[1], c[1], c[2], c[2]];
    }
    c= '0x'+c.join('');
    return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + transparent + ')';
  }
  throw new Error('Bad Hex');
}
            window.hs_config.gulpDarken = (p1) => {
  const options = p1.split(',')

  let col = options[0].toString()
  let amt = -parseInt(options[1])
  var usePound = false

  if (col[0] == "#") {
    col = col.slice(1)
    usePound = true
  }
  var num = parseInt(col, 16)
  var r = (num >> 16) + amt
  if (r > 255) {
    r = 255
  } else if (r < 0) {
    r = 0
  }
  var b = ((num >> 8) & 0x00FF) + amt
  if (b > 255) {
    b = 255
  } else if (b < 0) {
    b = 0
  }
  var g = (num & 0x0000FF) + amt
  if (g > 255) {
    g = 255
  } else if (g < 0) {
    g = 0
  }
  return (usePound ? "#" : "") + (g | (b << 8) | (r << 16)).toString(16)
}
            window.hs_config.gulpLighten = (p1) => {
  const options = p1.split(',')

  let col = options[0].toString()
  let amt = parseInt(options[1])
  var usePound = false

  if (col[0] == "#") {
    col = col.slice(1)
    usePound = true
  }
  var num = parseInt(col, 16)
  var r = (num >> 16) + amt
  if (r > 255) {
    r = 255
  } else if (r < 0) {
    r = 0
  }
  var b = ((num >> 8) & 0x00FF) + amt
  if (b > 255) {
    b = 255
  } else if (b < 0) {
    b = 0
  }
  var g = (num & 0x0000FF) + amt
  if (g > 255) {
    g = 255
  } else if (g < 0) {
    g = 0
  }
  return (usePound ? "#" : "") + (g | (b << 8) | (r << 16)).toString(16)
}
            </script>
</head>

<body class="has-navbar-vertical-aside navbar-vertical-aside-show-xl footer-offset">
  <button id="backToTopBtn" class="btn-back-to-top"><i class="fa-solid fa-arrow-up"></i></button>

  <script src="/dist/assets/js/hs.theme-appearance.js"></script>

  <script src="/dist/assets/vendor/hs-navbar-vertical-aside/dist/hs-navbar-vertical-aside-mini-cache.js"></script>



  <%= render "global_components/header"%>



  <%= render "global_components/sidebar"%>



  <main id="content" role="main" class="main">
    <% if notice or alert%>
    <div class="px-3 mt-3" id="noti-container" >
      <% if notice %>
        <p class="alert alert-success alert-dismissible"><%= notice %></p>
      <% end %>

      <% if alert %>
        <p class="alert alert-danger alert-dismissible"><%= alert %></p>
      <% end %>
    </div>
    <% end %>
    <%= yield %>

    <% content_for :js do %>
    <script>
        // fade out after 3sec.
        document.addEventListener("DOMContentLoaded", function() {
          function fadeOutMessage(messageContainerId) {
            $("#" + messageContainerId).fadeOut(3000, function() {
              $(this).remove();
            });
          }

          setTimeout(function() {
            fadeOutMessage("noti-container");
          }, 3000);
        });
    </script>
   <% end %>
   <%#= render "global_components/footer"%> <!-- not needed for now no footer in design -->
  </main>

  <div class="loading-overlay">
    <div class="loading-spinner"></div>
  </div>

  <script>
    // show loader when search button is clicked
    // and don't have class 'no-loader'
    $('form').submit(function() {
      if(!$(this).hasClass('no-loader')) {
        $('.loading-overlay').show();
      }
    });
  </script>

  <%= render 'external/tawkto' %>
  <!-- JS Global Compulsory  -->
  <script src="/dist/assets/vendor/jquery/dist/jquery.min.js"></script>
  <script src="/dist/assets/vendor/jquery-migrate/dist/jquery-migrate.min.js"></script>
  <script src="/dist/assets/vendor/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.full.min.js" integrity="sha512-RtZU3AyMVArmHLiW0suEZ9McadTdegwbgtiQl5Qqo9kunkVg1ofwueXD8/8wv3Af8jkME3DDe3yLfR8HSJfT2g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

  <!-- JS Implementing Plugins -->
  <script src="/dist/assets/vendor/hs-navbar-vertical-aside/dist/hs-navbar-vertical-aside.min.js"></script>
  <script src="/dist/assets/vendor/hs-form-search/dist/hs-form-search.min.js"></script>

  <script src="/dist/assets/vendor/chart.js/dist/Chart.min.js"></script>
  <script src="/dist/assets/vendor/chartjs-chart-matrix/dist/chartjs-chart-matrix.min.js"></script>
  <script src="/dist/assets/vendor/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.min.js"></script>
  <script src="/dist/assets/vendor/daterangepicker/moment.min.js"></script>
  <script src="/dist/assets/vendor/daterangepicker/daterangepicker.js"></script>
  <script src="/dist/assets/vendor/tom-select/dist/js/tom-select.complete.min.js"></script>
  <script src="/dist/assets/vendor/clipboard/dist/clipboard.min.js"></script>
  <script src="/dist/assets/vendor/datatables/media/js/jquery.dataTables.min.js"></script>
  <script src="/dist/assets/vendor/datatables.net.extensions/select/select.min.js"></script>

  <!-- JS  -->
  <script src="/dist/assets/js/theme.min.js"></script>
  <script src="/dist/assets/js/hs.theme-appearance-charts.js"></script>

  <!-- JS Plugins Init. -->
  <script>
    $(document).on('ready', function () {
      // INITIALIZATION OF DATERANGEPICKER
      // =======================================================
      $('.js-daterangepicker').daterangepicker();

      $('.js-daterangepicker-times').daterangepicker({
        timePicker: true,
        startDate: moment().startOf('hour'),
        endDate: moment().startOf('hour').add(32, 'hour'),
        locale: {
          format: 'M/DD hh:mm A'
        }
      });

      var start = moment();
      var end = moment();

      function cb(start, end) {
        $('#js-daterangepicker-predefined .js-daterangepicker-predefined-preview').html(start.format('MMM D') + ' - ' + end.format('MMM D, YYYY'));
      }

      $('#js-daterangepicker-predefined').daterangepicker({
        startDate: start,
        endDate: end,
        ranges: {
          'Today': [moment(), moment()],
          'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
          'Last 7 Days': [moment().subtract(6, 'days'), moment()],
          'Last 30 Days': [moment().subtract(29, 'days'), moment()],
          'This Month': [moment().startOf('month'), moment().endOf('month')],
          'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
        }
      }, cb);

      cb(start, end);

      // custom js
      $('.btn-remove').on('click', function(){
        $(this).parent().parent().remove();
      });
    });


    // INITIALIZATION OF DATATABLES
    // =======================================================
    HSCore.components.HSDatatables.init($('#datatable'), {
      select: {
        style: 'multi',
        selector: 'td:first-child input[type="checkbox"]',
        classMap: {
          checkAll: '#datatableCheckAll',
          counter: '#datatableCounter',
          counterInfo: '#datatableCounterInfo'
        }
      },
      language: {
        zeroRecords: `<div class="text-center p-4">
              <img class="mb-3" src="/dist/assets/svg/illustrations/oc-error.svg" alt="Image Description" style="width: 10rem;" data-hs-theme-appearance="default">
              <img class="mb-3" src="/dist/assets/svg/illustrations-light/oc-error.svg" alt="Image Description" style="width: 10rem;" data-hs-theme-appearance="dark">
            <p class="mb-0">No data to show</p>
            </div>`
      }
    });

    const datatable = HSCore.components.HSDatatables.getItem(0)

    document.querySelectorAll('.js-datatable-filter').forEach(function (item) {
      item.addEventListener('change',function(e) {
        const elVal = e.target.value,
    targetColumnIndex = e.target.getAttribute('data-target-column-index'),
    targetTable = e.target.getAttribute('data-target-table');

    HSCore.components.HSDatatables.getItem(targetTable).column(targetColumnIndex).search(elVal !== 'null' ? elVal : '').draw()
      })
    })
  </script>

  <!-- JS Plugins Init. -->
  <script>
    (function() {
      localStorage.removeItem('hs_theme')

      window.onload = function () {


        // INITIALIZATION OF NAVBAR VERTICAL ASIDE
        // =======================================================
        new HSSideNav('.js-navbar-vertical-aside').init()


        // INITIALIZATION OF FORM SEARCH
        // =======================================================
        const HSFormSearchInstance = new HSFormSearch('.js-form-search')

        if (HSFormSearchInstance.collection.length) {
          HSFormSearchInstance.getItem(1).on('close', function (el) {
            el.classList.remove('top-0')
          })

          document.querySelector('.js-form-search-mobile-toggle').addEventListener('click', e => {
            let dataOptions = JSON.parse(e.currentTarget.getAttribute('data-hs-form-search-options')),
              $menu = document.querySelector(dataOptions.dropMenuElement)

            $menu.classList.add('top-0')
            $menu.style.left = 0
          })
        }


        // INITIALIZATION OF BOOTSTRAP DROPDOWN
        // =======================================================
        HSBsDropdown.init()


        // INITIALIZATION OF CHARTJS
        // =======================================================
        HSCore.components.HSChartJS.init('.js-chart')


        // INITIALIZATION OF CHARTJS
        // =======================================================
        HSCore.components.HSChartJS.init('#updatingBarChart')
        const updatingBarChart = HSCore.components.HSChartJS.getItem('updatingBarChart')

        // Call when tab is clicked
        document.querySelectorAll('[data-bs-toggle="chart-bar"]').forEach(item => {
          item.addEventListener('click', e => {
            let keyDataset = e.currentTarget.getAttribute('data-datasets')

            const styles = HSCore.components.HSChartJS.getTheme('updatingBarChart', HSThemeAppearance.getAppearance())

            if (keyDataset === 'lastWeek') {
              updatingBarChart.data.labels = ["Apr 22", "Apr 23", "Apr 24", "Apr 25", "Apr 26", "Apr 27", "Apr 28", "Apr 29", "Apr 30", "Apr 31"];
              updatingBarChart.data.datasets = [
                {
                  "data": [120, 250, 300, 200, 300, 290, 350, 100, 125, 320],
                  "backgroundColor": styles.data.datasets[0].backgroundColor,
                  "hoverBackgroundColor": styles.data.datasets[0].hoverBackgroundColor,
                  "borderColor": styles.data.datasets[0].borderColor,
                  "maxBarThickness": 10
                },
                {
                  "data": [250, 130, 322, 144, 129, 300, 260, 120, 260, 245, 110],
                  "backgroundColor": styles.data.datasets[1].backgroundColor,
                  "borderColor": styles.data.datasets[1].borderColor,
                  "maxBarThickness": 10
                }
              ];
              updatingBarChart.update();
            } else {
              updatingBarChart.data.labels = ["May 1", "May 2", "May 3", "May 4", "May 5", "May 6", "May 7", "May 8", "May 9", "May 10"];
              updatingBarChart.data.datasets = [
                {
                  "data": [200, 300, 290, 350, 150, 350, 300, 100, 125, 220],
                  "backgroundColor": styles.data.datasets[0].backgroundColor,
                  "hoverBackgroundColor": styles.data.datasets[0].hoverBackgroundColor,
                  "borderColor": styles.data.datasets[0].borderColor,
                  "maxBarThickness": 10
                },
                {
                  "data": [150, 230, 382, 204, 169, 290, 300, 100, 300, 225, 120],
                  "backgroundColor": styles.data.datasets[1].backgroundColor,
                  "borderColor": styles.data.datasets[1].borderColor,
                  "maxBarThickness": 10
                }
              ]
              updatingBarChart.update();
            }
          })
        })


        // INITIALIZATION OF CHARTJS
        // =======================================================
        HSCore.components.HSChartJS.init('.js-chart-datalabels', {
          plugins: [ChartDataLabels],
          options: {
            plugins: {
              datalabels: {
                anchor: function (context) {
                  var value = context.dataset.data[context.dataIndex];
                  return value.r < 20 ? 'end' : 'center';
                },
                align: function (context) {
                  var value = context.dataset.data[context.dataIndex];
                  return value.r < 20 ? 'end' : 'center';
                },
                color: function (context) {
                  var value = context.dataset.data[context.dataIndex];
                  return value.r < 20 ? context.dataset.backgroundColor : context.dataset.color;
                },
                font: function (context) {
                  var value = context.dataset.data[context.dataIndex],
                    fontSize = 25;

                  if (value.r > 50) {
                    fontSize = 35;
                  }

                  if (value.r > 70) {
                    fontSize = 55;
                  }

                  return {
                    weight: 'lighter',
                    size: fontSize
                  };
                },
                formatter: function (value) {
                  return value.r
                },
                offset: 2,
                padding: 0
              }
            },
          }
        })

        // INITIALIZATION OF SELECT
        // =======================================================
        HSCore.components.HSTomSelect.init('.js-select')


        // INITIALIZATION OF CLIPBOARD
        // =======================================================
        HSCore.components.HSClipboard.init('.js-clipboard')
      }
    })()
  </script>

  <!-- Style Switcher JS -->

  <script>
      (function () {
        // STYLE SWITCHER
        // =======================================================
        const $dropdownBtn = document.getElementById('selectThemeDropdown') // Dropdowon trigger
        const $variants = document.querySelectorAll(`[aria-labelledby="selectThemeDropdown"] [data-icon]`) // All items of the dropdown

        // Function to set active style in the dorpdown menu and set icon for dropdown trigger
        const setActiveStyle = function () {
          $variants.forEach($item => {
            if ($item.getAttribute('data-value') === HSThemeAppearance.getOriginalAppearance()) {
              $dropdownBtn.innerHTML = `<i class="${$item.getAttribute('data-icon')}" />`
              return $item.classList.add('active')
            }

            $item.classList.remove('active')
          })
        }

        // Add a click event to all items of the dropdown to set the style
        $variants.forEach(function ($item) {
          $item.addEventListener('click', function () {
            HSThemeAppearance.setAppearance($item.getAttribute('data-value'))
          })
        })

        // Call the setActiveStyle on load page
        setActiveStyle()

        // Add event listener on change style to call the setActiveStyle function
        window.addEventListener('on-hs-appearance-change', function () {
          setActiveStyle()
        })
      });


    </script>

  <!-- End Style Switcher JS -->
  <%= yield :js %>


<script type="text/javascript">
  $(document).ready(function() {
  // Generate a random color
  var bg_theme_color = "<%= current_setting.theme_color %>";

  // Update the background color of all elements with the class bg-theme-color
  $('.bg-theme-color').css('background-color', bg_theme_color);
});

  $('.btn-toggle').on('click',function(e){
    $(this).hasClass('active') ? $(this).removeClass('active') : $(this).addClass('active');
    if($(this).hasClass('has-to-show')){
      $(this).hasClass('active') ? toShow($(this).data('toshow'),true) : toShow($(this).data('toshow'),false);
    }

    if($(this).hasClass('has-to-hide')){
      $(this).hasClass('active') ? toShow($(this).data('tohide'),false) : toShow($(this).data('tohide'),true);
    }

    if($(this).hasClass('to-change-value')) {
      var to_change = $(this).data('tochange');
      var is_boolean_type = $(this).data('isbooleantype');
      if(is_boolean_type == true) {
        $(this).hasClass('active') ? $('input[name="'+to_change+'"]').val(true) : $('input[name="'+to_change+'"]').val(false);
      } else {
        $(this).hasClass('active') ? $('input[name="'+to_change+'"]').val('yes') : $('input[name="'+to_change+'"]').val('no');
      }
    }
  });


</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/printThis/1.15.0/printThis.js" integrity="sha512-Fd3EQng6gZYBGzHbKd52pV76dXZZravPY7lxfg01nPx5mdekqS8kX4o1NfTtWiHqQyKhEGaReSf4BrtfKc+D5w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
$('#present-switch').on('click', function(){
    if ($('#present-switch').is(":checked")) {
        $("#residence-date-to").attr("disabled", true);
    } else {
        $("#residence-date-to").attr("disabled", false);
    }
});

$('#practice-info-switch').on('click', function(){
    if ($('#practice-info-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#education-switch').on('click', function(){
    if ($('#education-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});


$('#registration-switch').on('click', function(){
    if ($('#registration-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#training-switch').on('click', function(){
    if ($('#training-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#board-cert-switch').on('click', function(){
    if ($('#board-cert-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});


$('#filter-select').on('change', function(){
     var val = $(this).find(':selected').val();

     if(val == "All Location") {
        $('#remove-location').css('display', 'none');
        $('#add-provider').css('display', 'none');
     } else {
        $('#remove-location').css('display', 'block');
        $('#add-provider').css('display', 'block');
     }
});

$("input[name$='ExcludedAreaOfPractice']").click(function() {
    if ($(this).val() === 'yesExcludedAreaOfPractice') {
        $('div.ListOfExclusions').css('display', 'block');
    } else {
        $('div.ListOfExclusions').css('display', 'none');
    }
});

$("input[name$='AppliedboardCertificate']").click(function() {
    if ($(this).val() === 'yesAppliedboardCertificate') {
        $('div.YesAppliedboardCertificate').css('display', 'block');
    } else {
        $('div.YesAppliedboardCertificate').css('display', 'none');
    }
});

$("input[name$='Examined']").click(function() {
    if ($(this).val() === 'yesExamined') {
        $('div.YesExamined').css('display', 'block');
    } else {
        $('div.YesExamined').css('display', 'none');
    }
});

$("input[name$='Completed']").click(function() {
    if ($(this).val() === 'yesCompleted') {
        $('div.NotCompleted').css('display', 'none');
    } else {
        $('div.NotCompleted').css('display', 'block');
    }
});

$('#present-switch').on('click', function(){
    if ($('#present-switch').is(":checked")) {
        $("#residence-date-to").attr("disabled", true);
    } else {
        $("#residence-date-to").attr("disabled", false);
    }
});

$('#practice-info-switch').on('click', function(){
    if ($('#practice-info-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#licensure-disclosure-switch').on('click', function(){
    if ($('#licensure-disclosure-switch').is(":checked")) {
        $(".YesDisclosure").show();
    } else {
        $(".YesDisclosure").hide();
    }
});

$('#FiveYears-disclosure-switch').on('click', function(){
    if ($('#FiveYears-disclosure-switch').is(":checked")) {
        $(".YesFiveYears").show();
    } else {
        $(".YesFiveYears").hide();
    }
});

$('#fac-disclosure-switch').on('click', function(){
    if ($('#fac-disclosure-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#disclosure-switch').on('click', function(){
    if ($('#disclosure-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#training-switch').on('click', function(){
    if ($('#training-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#board-cert-switch').on('click', function(){
    if ($('#board-cert-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});
$('#licensure-switch').on('click', function(){
    if ($('#licensure-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#other-cert-switch').on('click', function(){
    if ($('#other-cert-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#registration-switch').on('click', function(){
    if ($('#registration-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#app-tracking-switch').on('click', function(){
    if ($('#app-tracking-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
    } else {
        $(".page-applicable").show();
        $(".page-not-applicable").css('display', 'none');
    }
});

$("input[name='full-sched-radio']").on('click', function(){

    if ($(this).val() === 'Yes') {
        $('.sched-wrp').css('display', 'none');
    } else {
        $('.sched-wrp').css('display', 'block');
    }

});

$("input[name='limited-radio']").on('click', function(){

    if ($(this).val() === 'Yes') {
        $('.limited-wrp').css('display', 'block');
    } else {
        $('.limited-wrp').css('display', 'none');
    }

});

$("input[name='ECFMG-certified-radio']").on('click', function(){

    if ($(this).val() === 'Yes') {
        $('.ECFMG-certified-wrp').show();
    } else {
        $('.ECFMG-certified-wrp').hide();
    }

});

$("input[name='us-military-radio']").on('click', function(){

    if ($(this).val() === 'Yes') {
        $('.us-military-wrp').css('display', 'block');
    } else {
        $('.us-military-wrp').css('display', 'none');
    }

});

$('#practice-info-switch').on('click', function(){
    if ($('#practice-info-switch').is(":checked")) {
        $(".page-not-applicable").css('display', 'block');
        $(".page-applicable").hide();
        $(".allied-health-card").show();
    } else {
        $(".page-applicable").show();
        $(".allied-health-card").hide();
        $(".page-not-applicable").css('display', 'none');
    }
});

$('#accessible-other-check').on('click', function(){
    if ($('#accessible-other-check').is(":checked")) {
        $(".accessible-other-wrp").css('display', 'block');
    } else {
        $(".accessible-other-wrp").css('display', 'none');
    }
});

$('#other-cert-participation').on('change', function(){
    var val = $(this).find(':selected').val();

    if(val == "Other") {
       $('#other-cert-participation-txt').css('display', 'block');
       $('#other-cert-participation').css('display', 'none');
    } else {
       $('#other-cert-participation-txt').css('display', 'none');
       $('#other-cert-participation').css('display', 'block');
    }
});

$('#prac-info-btn-edit').on('click', function(){
    $("#prac-info-btn-edit").css('display', 'none');
    $("#prac-info-btn-save").css('display', 'block');
    $("#prac-info-btn-cancel").css('display', 'block');
});

$('#prac-info-btn-cancel').on('click', function(){
    $("#prac-info-btn-edit").css('display', 'block');
    $("#prac-info-btn-save").css('display', 'none');
    $("#prac-info-btn-cancel").css('display', 'none');
});

$("input[name$='lawsuit-status-radio']").click(function() {
    if ($(this).val() === 'Lawsuit still ongoing/unresolved') {
        $('div.amount-wrp').css('display', 'block');
    } else {
        $('div.amount-wrp').css('display', 'none');
    }
});

$('.js-example-basic-multiple').select2({
    placeholder: "Select option"
});

$('.select-show').on('change',function(){
  var show_field = $(this).attr('show');
  $(this).val() == 'yes' ? $('#'+show_field).removeClass('d-none') : $('#'+show_field).addClass('d-none');
})
// this is for none yes or no select fields with prompt
$('.select-with-show').on('change',function() {
  var show_field = $(this).data('show');
  var value = $(this).val();
  value != ''  ? $('#'+show_field).removeClass('d-none') : $('#'+show_field).addClass('d-none');
});


$('#group_type_select').on('change',function(){

  var label_texts = ['Upload Signed Operating Agreement', 'Upload Partnership Agreement', 'Articles of Incorporation', 'Upload appropriate documents'];
  var selected = $(this).prop('selectedIndex');

  if(selected != 0)
    $('#group_specific_label').html(label_texts[selected - 1]);

});

$(document).ready(function(){
  $('input[type="hidden"]').each(function() {
    var hiddenInput = $(this);
    toggleOn(hiddenInput.attr('id'));
  });
});

function toggleOn(id){
  var element_value = $('#' + id).val();
	if (element_value == 'yes'){
		setTimeout(function(){
			$('#' + id).parent().find('button').click();
		}, 500);
	}
}

function addRequiredAttribute(formId, elementIds) {
  // reset all elements to required = false
  $('#' + formId).find('*').not('.optional').prop('required', false);

  if (elementIds) {
    var ids = elementIds.split(',');

    $('#' + formId).find('*').not('.optional').each(function() {
      var elementId = $(this).attr('id');
      if (ids.includes(elementId)) {
        $(this).prop('required', true);
      }
    });
  } else {
    $('#' + formId).find('*').not('.optional').prop('required', true);
  }
}

var csrfToken = $('meta[name="csrf-token"]').attr('content');

$('#enroll_group_group_id').on('change',function() {
  var id = $(this).val();
  var url = '/enrollments/groups/'+id+'/get_dcos';

  if(id != '')
  {
          $.ajax({
            url: url,
            type: 'POST',
            data: { authenticity_token: csrfToken },
            success: function(data) {
              var practice_locations = data['practice_locations'];
              if(practice_locations.length != 0) {
                $('#enroll_group_dco').empty();
                for (var i = 0; i < practice_locations.length ; i++) {
                  $('#enroll_group_dco').append('<option value="'+practice_locations[i][0]+'">'+practice_locations[i][1]+'</option>');
                }
              }else{
                $('#enroll_group_dco').empty();
                $('#enroll_group_dco').append('<option value="">Practice Location</option>');
              }
            }
          })

  }
})
$('#provider_enrollment_group_id').on('change',function(){
        var id = $(this).val();
        var get_names = '';
        get_names = $(this).data('fetchname');

        var url = '/enrollments/groups/'+id+'/get_dcos';
        if(id != '') {
          $.ajax({
            url: url,
            type: 'POST',
            data: { authenticity_token: csrfToken, get_name: get_names },
            success: function(data) {
              var practice_locations = data['practice_locations'];
              if(practice_locations.length != 0) {
                const urlParams = new URLSearchParams(window.location.search);
                const selected_practice_location = urlParams.get('dco_name');
                $('#provider_dco').empty();
                $('#provider_dco').append('<option value="">Practice Location</option>');
                for (var i = 0; i < practice_locations.length ; i++) {
                  $('#provider_dco').append('<option' + (Number(selected_practice_location) == practice_locations[i][0] ? ' selected=selected' : '') +' value="'+practice_locations[i][0]+'">'+practice_locations[i][1]+'</option>');
                }
                $('#provider_dco_div').removeClass('d-none');
              }else{
                $('#provider_dco').empty();
                $('#provider_dco').append('<option value="">Practice Location</option>');
                $('#provider_dco_div').addClass('d-none');
              }
            }
          })
        }else{
          $('#provider_dco').empty();
          $('#provider_dco').append('<option value="">Practice Location</option>');
          $('#provider_dco_div').addClass('d-none');
        }

    // part to remove/delete dynamic multiple attrs
      $(document).on('click','.remove-dynamic-fields',function(){
      if($(this).hasClass('.details-fields'))
          $(this).parent().parent().parent().remove();
    //    else
    //      $(this).parent().parent().remove();
      })

      $('.delete-record').on('click',function (){
        var id = $(this).data('id');
        var model = $(this).data('model');

        deleteDynamicAttr(id,model,$(this));
      })

      function deleteDynamicAttr(id,model,button) {
        $.ajax({
          url: '<%= delete_record_path %>',
          method: 'POST',
          data: { authenticity_token: csrfToken, id: id, model: model },
          success: function(data) {
            if(button.hasClass('details-fields'))
              button.parent().parent().parent().remove();
            else
              button.parent().parent().remove();

          }
        })
      }
});


</script>
<!-- updating status from sidebar on show pages for enroll_group and enrollment_provider -->
<script>
  var csrfToken = $('meta[name="csrf-token"]').attr('content');
  var id = $('#enrollment_model_id').val();

  $(document).ready(function() {
    $('.delete-button').on('click', function(e) {
      var confirmationMessage = $(this).data('confirm');

      if (!confirm(confirmationMessage)) {
        e.preventDefault();
      }
    });
  });

  // Fix on the part where clicking a date input
  // It clears out the current value
  onFocusDateField = (e) => {
    curernt_value = e.target.value
    if(curernt_value != '') {
      myDate = curernt_value;
      altDate = myDate.split('/');
      tmpDate = altDate.pop();
      altDate.unshift(tmpDate);
      newDate = altDate.join('-');
      e.target.type = 'date';
      e.target.value = newDate
    }
    else{
      e.target.type = 'date'
    }
  }

  $(document).on('click', '.enrollment-update-status',function() {
    var model = $(this).data('model');
    var status = $(this).data('status');
    var btn = $(this);
    $.ajax({
      url: '<%= change_enrollment_status_path %>',
      method: 'POST',
      data: { authenticity_token: csrfToken, model: model, status: status, id: id },
      success: function(data) {
        changeStatusOtherButton(btn);
        changeBtnToDisable(btn);
        $('#status_identified').html('ID: ' + data['id'] + ' Enrollment ' + data['status']);
      }
    })
  });

  function changeBtnToDisable(btn) {
    btn.removeClass('enrollment-update-status');
    btn.addClass('disabled');
    btn.addClass('unavailable');
  }

  function changeStatusOtherButton(btn) {
    btn.parent().parent().find('div').find('a').removeClass('unavailable');
    btn.parent().parent().find('div').find('a').removeClass('disabled');
    btn.parent().parent().find('div').find('a').addClass('enrollment-update-status');
  }

  $(document).on('click', '.collapsible-trigger',function(){
    var collapse_name = $(this).data('collapse');
    $(this).hasClass('rotate-collapse') ? $(this).removeClass('rotate-collapse') : $(this).addClass('rotate-collapse');
    $(this).parent().parent().find('.collapsible').slideToggle("1000");
    updateCollapseState(collapse_name);
  })

  function updateCollapseState(collapse_name) {
    $.ajax({
      url: '<%= update_collapse_path %>',
      method: 'post',
      data: { authenticity_token: csrfToken, collapse_name: collapse_name },
      success: function(data) {

      }
    })
  }

	$(document).ready(function(){
		var options = '<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">';
		$('.btn-print').on('click',function(){
			var to_print = $(this).data('toprint');
			$('#'+to_print).printThis({
            importCSS: true,
            loadCSS: options,
            canvas: true});
		});
	})

</script>
<script>
	$(document).ready(function(){
		// click bi-searc and submit form
		$('.form_search_with_icon i.bi-search').click(function(){
			$(this).closest('form').submit();
		});
	});
</script>
<script>
  function removeFile(icon, event){
    event.preventDefault();
    if(confirm('Are you sure you want to delete?')){
      $(icon).closest('.upload-payor-file').remove();
      $(icon).closest('.upload-file').remove();
    }
  }
</script>
<script>
  window.addEventListener("beforeunload", function() {
    // post  /users/logout_on_close
    // fetch('/logout-on-close', { method: 'POST', authenticity_token: $('meta[name="csrf-token"]').attr('content')});
    $.post('/logout-on-close')
  });

  // set timeout in 10 seconds to update logout on close to verify if the user still on the page
  setTimeout(function(){
    $.post('/logout-on-close', { logout_on_close: false })
  }, 10000);
</script>

<script>
   function toggleBackToTopButton() {
      var backToTopBtn = document.getElementById("backToTopBtn");
      if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
         backToTopBtn.style.display = "block";
      } else {
         backToTopBtn.style.display = "none";
      }
   }

   window.onscroll = function () {
      toggleBackToTopButton();
   };

   function scrollToTop() {
      document.body.scrollTop = 0;
      document.documentElement.scrollTop = 0;
   }
   var backToTopBtn = document.getElementById("backToTopBtn");
   backToTopBtn.addEventListener("click", scrollToTop);
</script>

<script type="text/javascript">
    document.getElementById('toggleButton').addEventListener('click', function () {
        var cardContainer = document.getElementById('cardContainer');
        cardContainer.style.maxHeight = cardContainer.style.maxHeight === '30px' ? '500px' : '30px';
        toggleButton.classList.toggle('flipped');
    });
</script>
<% yield :js %>
</body>
</html>